<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>React To-Do List</title>

    <!-- React and ReactDOM CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.development.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.development.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.23.9/babel.min.js"></script>

    <style>
        
        body {
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>

   
    <div id="root"></div>


    <script type="text/babel">
        const { useState } = React;

        const TodoList = () => {
            const [tasks, setTasks] = useState([]);
            const [task, setTask] = useState("");

            const addTask = () => {
                if (task.trim() !== "") {
                    setTasks([...tasks, task]);
                    setTask("");
                }
            };

            const removeTask = (index) => {
                setTasks(tasks.filter((_, i) => i !== index));
            };

           
            const styles = {
                container: { 
                    backgroundColor: "#e3f2fd",
                    display: "flex", 
                    flexDirection: "column", 
                    alignItems: "center", 
                    justifyContent: "center", 
                    height: "100vh", 
                    textAlign: "center" 
                },
                input: { 
                    padding: "8px", 
                    marginRight: "5px", 
                    borderRadius: "5px", 
                    border: "1px solid #ccc", 
                    width: "250px" 
                },
                button: { 
                    padding: "8px 12px", 
                    margin: "5px", 
                    cursor: "pointer", 
                    backgroundColor: "#28a745", 
                    color: "white", 
                    border: "none", 
                    borderRadius: "5px" 
                },
                removeButton: { 
                    marginLeft: "10px", 
                    backgroundColor: "red", 
                    color: "white", 
                    border: "none", 
                    padding: "5px", 
                    borderRadius: "5px", 
                    cursor: "pointer" 
                },
                listContainer: { 
                    display: "flex", 
                    justifyContent: "center", 
                    width: "100%", 
                    padding: "5px" 
                },
                list: { 
                    textAlign: "left", 
                    padding: "0", 
                    marginTop: "20px", 
                    width: "300px" 
                },
                listItem: { 
                    margin: "10px 0", 
                    display: "flex", 
                    justifyContent: "space-between", 
                    alignItems: "center" 
                }
            };

            return (
                <div style={styles.container}>
                    <h2>To-Do List</h2>
                    <div>
                        <input
                            type="text"
                            style={styles.input}
                            value={task}
                            onChange={(e) => setTask(e.target.value)}
                            placeholder="Enter a task..."
                        />
                        <button style={styles.button} onClick={addTask}>Add</button>
                    </div>

                    <div style={styles.listContainer}>
                        <ol style={styles.list}>
                            {tasks.map((item, index) => (
                                <li key={index} style={styles.listItem}>
                                    {item}
                                    <button style={styles.removeButton} onClick={() => removeTask(index)}>Remove</button>
                                </li>
                            ))}
                        </ol>
                    </div>
                </div>
            );
        };

        // Render the To-Do List
        ReactDOM.createRoot(document.getElementById("root")).render(<TodoList />);
    </script>

</body>
</html>
